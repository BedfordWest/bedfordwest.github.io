webpackJsonp([0xd513b9e56a51],{301:function(t,e){t.exports={data:{markdownRemark:{html:'<p>The joy of learning continues as I move forward with my attempt at setting up a functional\n<a href="https://www.archlinux.org/">Arch</a> + <a href="https://i3wm.org/">i3</a> work\nenvironment on my laptop. </p>\n<p>Progress:</p>\n<ul>\n<li>Arch installed</li>\n<li>i3 installed</li>\n<li>i3 boots up and displays separate workspaces on each display when connected to an external monitor</li>\n<li>Wi-Fi working with NetworkManager</li>\n</ul>\n<p>Known Problems:</p>\n<ul>\n<li>No sound</li>\n<li>Ugly interface</li>\n<li>No backup/snapshot system installed</li>\n</ul>\n<p>Alright, so what has happened since my last post? Well, despite my joy at having gotten i3 and Xorg to work\ncorrectly on my installation, I soon realized that I was not in the clear. When I went to boot up my laptop\nfor the first time after my last post, I realized my external monitor was no longer displaying anything. In\nfact, it turns out the system wasn\'t registering the monitor as connected at all. I spent a while trying to adjust\nXorg or i3 settings, but nothing seemed to work. I also tried various video driver tweaks, which also did nothing\nto resolve the issue.</p>\n<p>After a while, I discovered Arch has a <a href="https://wiki.archlinux.org/index.php/Dell_Precision_M4800">wiki page</a> for\nmy particular laptop model. This is one reason why Open Source (and Arch Linux, in particular) are so amazing -\nthe community support can often be fantastic. Once I found that page, I saw the notes at the bottom concerning\nthings that don\'t work or need adjustment for my model. This led me to me to discover\n<a href="https://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support">Linux Dynamic Kernel Module Support</a>. It turns out\nthat the proprietary Nvidia drivers my laptop model needs are not compatible with the default Linux DKMS. I tried\nto work around this, but it is actually the workaround (adding nomodeset to my boot parameters) that caused my\nexternal monitor to no longer be recognized in the first place.</p>\n<p>It turns out a user has made and maintained a version of the DKMS that works with Nvidia in the\n<a href="https://aur.archlinux.org/">Arch User Repository</a>. This isn\'t ideal, as it adds a level of risk from both a\nsecurity standpoint and also from the standpoint of system stability. Given the popularity of the package,\nfrequency of update, and necessity on my end, however, I deemed these risks to be worth taking. </p>\n<p>After installing the <code>nvidia-dkms</code> package from the AUR, my external monitor started working again! Unfortunately,\nthis was not the end of my monitor troubles. While the monitor was being detected and was displaying output, it was\nalways an exact mirror of my laptop primary display. This is -not- the intended behavior per the i3 documentation,\nso I realized something was wrong. The solution to this problem required an increase to my knowledge of xrandr.</p>\n<p>While I did not discover the root cause of my problem with the mirrored displays, I did find an acceptable solution.\nThe <a href="https://wiki.archlinux.org/index.php/Xrandr">xrandr utility</a> is packaged with Xorg to help identify and configure\ndisplays. It turns out executing a particular xrandr command would set the output of my external monitor to my desired\nconfiguration. This command was simply <code>xrandr --output eDP1 --auto --left-of VGA1</code>, where eDP1 is my laptop primary\ndisplay and VGA1 is my external monitor. In order for this setting to work with i3, however, I needed to add the\ncommand as an executable statement in my <code>~/.i3/config</code> file. The syntax for this was simply\n<code>exec --no-startup-id xrandr --output eDP1 --auto --left-of VGA1</code>. Once I did this, my external display now displayed\noutput independently from my laptop primary display and defaulted to a separate workspace, as expected!</p>\n<p>Despite hearing so many terrible things about setting up Wi-Fi on Linux and, despite having a wireless adaptor known\nto have conflicts with Linux, I actually had a fairly easy time getting my Wi-Fi to work. I simply needed to identify\nthe correct driver &#x26; firmware I needed to install (as the adapter was not working correctly out of the box), install\nthat from the AUR, and then install and start <a href="https://wiki.archlinux.org/index.php/NetworkManager">NetworkManager</a>\nand the NetworkManager Applet. The only remaining step was to add the applet to my i3 config file as an executable\ncommand. I also needed to install the Gnome Keychain in order to authenticate with my wireless network. After doing\nthis, the NetworkManager starts correctly when I load i3 and automatically connects to my network. Easy!</p>\n<p>The last thing I did was add <code>startx</code> to my <code>~/.bash_profile</code> so that i3 starts up as soon as I log in.</p>\n<p>So, I think I\'m getting there! This has definitely been extremely rewarding, and I think the toughest parts of my\ninstallation are probably behind me. I still need to address the "known problems" from above, but I\'m hoping those\nwill be relatively painless. After that, I\'m free to play around with customizing my UI and workspace!</p>',timeToRead:4,frontmatter:{date:"August 14, 2015",title:"An Experiment with Arch and i3 Tiling Window Manager - Part 2",author:{id:"Bedford West"}}}},pathContext:{slug:"/blog/arch-pt2"}}}});
//# sourceMappingURL=path---blog-arch-pt-2-ec2c2ff67a16c7b0813e.js.map